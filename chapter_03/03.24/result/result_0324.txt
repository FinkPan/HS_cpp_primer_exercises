考虑这样的序列 1，2，3，5，8，13，21，并初始化一个将该序列数字所对应的位置置为 1 的 bitset<32> 对象。然后换个方法，给定一个空的 bitset，编写一小段程序把相应的数位设置为 1。

答:
1.可以用bitset<n> b(u); b 是 unsigned long 型 u 的一个副本 初始化
	二进制转十进制 i = 2^1+2^2+2^3+2^5+2^8+2^13+2^21 = 2105646
	bitset<32> b(2105646);

2.可以用bitset<n> b(s);  b 是 string 对象 s 中含有的位串的副本 初始化
	bitset<32> b("01110100100001000000010000000000");


3给定一个空的 bitset，编写一小段程序把相应的数位设置为 1
#include <bitset>
#include <iostream>
#include <vector>
using namespace std;

int main()
{
	vector<int> ivec;
	bitset<32> bv;
	int n;
	cout << "please input the sequence(any letter for end):" << endl;
	while(cin >> n)
	{
		ivec.push_back(n);	//将需要设置为1的序列放到vector中
	}

	for (vector<int>::iterator iter = ivec.begin(); iter != ivec.end(); ++iter)
		bv.set(*iter);		//b.set(pos) 把 b 中在 pos 处的二进制位置为 1 

	return 0;
}

